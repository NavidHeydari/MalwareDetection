# -*- coding: utf-8 -*-
"""
Created on Wed Feb 12 18:25:13 2019

@author: Navid Heydari
"""
import pandas as pd
import sys
import numpy as np; np.random.seed(4321)
import seaborn as sns
from sklearn.preprocessing import LabelEncoder
import warnings
warnings.filterwarnings("ignore")
import matplotlib.pyplot as plt
from sklearn import preprocessing 

data = pd.read_csv(sys.argv[1])

data.replace([np.inf, -np.inf], np.nan)
data = data.drop('MachineIdentifier',axis=1)
categorical = list(data.select_dtypes(include=['object']).columns.values)

print("categorical:",categorical)

labelEncoder = preprocessing.LabelEncoder()
for category in categorical:
    data[category].fillna("NA", inplace=True)
    data[category] = [x.replace('.', '') for x in data[category]]
    data[category] = labelEncoder.fit_transform(data[category].astype(str))

non_categorical = list(data.select_dtypes(include=['float64','float32','float16']).columns.values)


print("non_categorical:",non_categorical)
for nonCat in non_categorical:
    mean_val = np.mean(data[nonCat])
    #median_val = np.median(data[nonCat])
    if(np.isnan(mean_val)):
        mean_val = 0

    mean_val = round(mean_val, 2)
    print("mean_val:",mean_val," - column:",nonCat)
    data[nonCat].fillna(mean_val, inplace=True)

print("--------------")

correlation = data.corr()
#correlation heat map
#sns.heatmap(correlation, annot=False )
print(correlation)

#filtering all the columns/feature we want to process
columns = [] #set()
for i in range(correlation.shape[0]):
    for j in range(i+1, correlation.shape[0]):
        if correlation.iloc[i,j] < 0.9:
            columns.append(correlation.columns[i])

selected_columns = np.unique(columns) 
print("selected_columns:",selected_columns , " | selectedColumns.size=",selected_columns.size)
print("before filtering data -- data.size=",len(data.columns))
data = data[selected_columns]
print("after filtering by selected feature -- data.size=",len(data.columns))
correlation.style.background_gradient().set_precision(2)
